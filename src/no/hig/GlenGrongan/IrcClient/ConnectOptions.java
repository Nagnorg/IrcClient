/**
 * 
 */
package no.hig.GlenGrongan.IrcClient;

import javax.swing.*;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.Scanner;
import java.util.prefs.Preferences;
import java.util.regex.*;

/**
 * Class containing creation of GUI for the user to create a connection.
 * Mostly autogenerated by the GUI renderer made in the last project.
 * @version 0.1
 * @author Glen & Martin
 *
 */
	public class ConnectOptions extends JFrame {
		ConnectOptionsModel networkList = new ConnectOptionsModel(null);
		ConnectOptionsModel serverList;
		
		Preferences pref;
		//Autogenerated code
		JLabel label1 = new JLabel("IRC Network");
		JComboBox networkChosen = new JComboBox();
		JComboBox serverChosen = new JComboBox();
		JButton connectButton = new JButton("Connect to server");
		JButton addButton = new JButton("Add");
		JButton editButton = new JButton("Edit");
		JButton removeButton = new JButton("Remove");
		JButton sortButton = new JButton("Sort");
		JLabel label2 = new JLabel("Username");
		JLabel label3 = new JLabel("Nickname");
		JLabel label4 = new JLabel("Alternative 1");
		JLabel label5 = new JLabel("Alternative 2");
		JTextField insertName = new JTextField("", 12);
		JTextField insertNick = new JTextField("", 12);
		JTextField insertAlt1 = new JTextField("", 10);
		JTextField insertAlt2 = new JTextField("", 10);
		JButton okButton = new JButton("Ok");
		JButton cancelButton = new JButton("Cancel");
	public ConnectOptions () {
		super("Options");
		pref = Preferences.userNodeForPackage( getClass() );
		//System.out.println(pref.nodeExists(pathName))
		Dimension networkBoxSize = new Dimension(120,25);
		Dimension serverBoxSize = new Dimension(200,25);
		networkChosen.setMinimumSize(networkBoxSize);
		networkChosen.setMaximumSize(networkBoxSize);
		serverChosen.setMinimumSize(serverBoxSize);
		serverChosen.setMaximumSize(serverBoxSize);
		networkChosen.setModel(networkList);
		networkChosen.addItemListener(
				new ItemListener(){

					@Override
					public void itemStateChanged(ItemEvent e) {
						if(e.getStateChange() == ItemEvent.SELECTED){
							serverList = new ConnectOptionsModel((String)networkList.getSelectedItem());
							serverChosen.setModel(serverList);
						}
						
					}
					
				});
		
		//Autogenerated code
		GridBagLayout layout = new GridBagLayout();
		GridBagConstraints gbc = new GridBagConstraints();
		setLayout(layout);

		gbc.gridx = 3;
		gbc.gridy = 1;
		gbc.gridwidth = 2;
		gbc.gridheight = 1;
		gbc.anchor = java.awt.GridBagConstraints.CENTER;
		gbc.fill = java.awt.GridBagConstraints.NONE;
		layout.setConstraints(label1, gbc);
		add(label1);

		gbc.gridx = 5;
		gbc.gridy = 1;
		gbc.gridwidth = 1;
		gbc.gridheight = 1;
		gbc.anchor = java.awt.GridBagConstraints.EAST;
		gbc.fill = java.awt.GridBagConstraints.NONE;
		layout.setConstraints(networkChosen, gbc);
		add(networkChosen);

		gbc.gridx = 3;
		gbc.gridy = 2;
		gbc.gridwidth = 3;
		gbc.gridheight = 1;
		gbc.anchor = java.awt.GridBagConstraints.EAST;
		gbc.fill = java.awt.GridBagConstraints.NONE;
		layout.setConstraints(serverChosen, gbc);
		add(serverChosen);

		gbc.gridx = 3;
		gbc.gridy = 3;
		gbc.gridwidth = 3;
		gbc.gridheight = 2;
		gbc.anchor = java.awt.GridBagConstraints.CENTER;
		gbc.fill = java.awt.GridBagConstraints.NONE;
		layout.setConstraints(connectButton, gbc);
		add(connectButton);

		gbc.gridx = 6;
		gbc.gridy = 1;
		gbc.gridwidth = 1;
		gbc.gridheight = 1;
		gbc.anchor = java.awt.GridBagConstraints.CENTER;
		gbc.fill = java.awt.GridBagConstraints.HORIZONTAL;
		layout.setConstraints(addButton, gbc);
		add(addButton);

		gbc.gridx = 6;
		gbc.gridy = 2;
		gbc.gridwidth = 1;
		gbc.gridheight = 1;
		gbc.anchor = java.awt.GridBagConstraints.CENTER;
		gbc.fill = java.awt.GridBagConstraints.HORIZONTAL;
		layout.setConstraints(editButton, gbc);
		add(editButton);

		gbc.gridx = 6;
		gbc.gridy = 3;
		gbc.gridwidth = 1;
		gbc.gridheight = 1;
		gbc.anchor = java.awt.GridBagConstraints.CENTER;
		gbc.fill = java.awt.GridBagConstraints.HORIZONTAL;
		layout.setConstraints(removeButton, gbc);
		add(removeButton);

		gbc.gridx = 6;
		gbc.gridy = 4;
		gbc.gridwidth = 1;
		gbc.gridheight = 1;
		gbc.anchor = java.awt.GridBagConstraints.CENTER;
		gbc.fill = java.awt.GridBagConstraints.HORIZONTAL;
		layout.setConstraints(sortButton, gbc);
		add(sortButton);

		gbc.gridx = 1;
		gbc.gridy = 6;
		gbc.gridwidth = 2;
		gbc.gridheight = 1;
		gbc.anchor = java.awt.GridBagConstraints.CENTER;
		gbc.fill = java.awt.GridBagConstraints.NONE;
		layout.setConstraints(label2, gbc);
		add(label2);

		gbc.gridx = 1;
		gbc.gridy = 7;
		gbc.gridwidth = 2;
		gbc.gridheight = 1;
		gbc.anchor = java.awt.GridBagConstraints.CENTER;
		gbc.fill = java.awt.GridBagConstraints.NONE;
		layout.setConstraints(label3, gbc);
		add(label3);

		gbc.gridx = 1;
		gbc.gridy = 8;
		gbc.gridwidth = 2;
		gbc.gridheight = 1;
		gbc.anchor = java.awt.GridBagConstraints.CENTER;
		gbc.fill = java.awt.GridBagConstraints.NONE;
		layout.setConstraints(label4, gbc);
		add(label4);

		gbc.gridx = 1;
		gbc.gridy = 9;
		gbc.gridwidth = 2;
		gbc.gridheight = 1;
		gbc.anchor = java.awt.GridBagConstraints.CENTER;
		gbc.fill = java.awt.GridBagConstraints.NONE;
		layout.setConstraints(label5, gbc);
		add(label5);

		gbc.gridx = 3;
		gbc.gridy = 6;
		gbc.gridwidth = 3;
		gbc.gridheight = 1;
		gbc.anchor = java.awt.GridBagConstraints.WEST;
		gbc.fill = java.awt.GridBagConstraints.NONE;
		layout.setConstraints(insertName, gbc);
		add(insertName);

		gbc.gridx = 3;
		gbc.gridy = 7;
		gbc.gridwidth = 3;
		gbc.gridheight = 1;
		gbc.anchor = java.awt.GridBagConstraints.WEST;
		gbc.fill = java.awt.GridBagConstraints.NONE;
		layout.setConstraints(insertNick, gbc);
		add(insertNick);

		gbc.gridx = 3;
		gbc.gridy = 8;
		gbc.gridwidth = 2;
		gbc.gridheight = 1;
		gbc.anchor = java.awt.GridBagConstraints.WEST;
		gbc.fill = java.awt.GridBagConstraints.NONE;
		layout.setConstraints(insertAlt1, gbc);
		add(insertAlt1);

		gbc.gridx = 3;
		gbc.gridy = 9;
		gbc.gridwidth = 2;
		gbc.gridheight = 1;
		gbc.anchor = java.awt.GridBagConstraints.WEST;
		gbc.fill = java.awt.GridBagConstraints.NONE;
		layout.setConstraints(insertAlt2, gbc);
		add(insertAlt2);
		
		gbc.gridx = 3;
		gbc.gridy = 10;
		gbc.gridwidth = 1;
		gbc.gridheight = 1;
		gbc.anchor = java.awt.GridBagConstraints.CENTER;
		gbc.fill = java.awt.GridBagConstraints.BOTH;
		layout.setConstraints(okButton, gbc);
		add(okButton);

		gbc.gridx = 4;
		gbc.gridy = 10;
		gbc.gridwidth = 1;
		gbc.gridheight = 1;
		gbc.anchor = java.awt.GridBagConstraints.CENTER;
		gbc.fill = java.awt.GridBagConstraints.BOTH;
		layout.setConstraints(cancelButton, gbc);
		add(cancelButton);
		}

	/**
	 * @return the networkChosen
	 */
	public JComboBox<String> getNetworkChosen() {
		return networkChosen;
	}

	/**
	 * @return the serverChosen
	 */
	public JComboBox getserverChosen() {
		return serverChosen;
	}

	/**
	 * @return the connectButton
	 */
	public JButton getConnectButton() {
		return connectButton;
	}

	/**
	 * @return the addButton
	 */
	public JButton getAddButton() {
		return addButton;
	}

	/**
	 * @return the editButton
	 */
	public JButton getEditButton() {
		return editButton;
	}

	/**
	 * @return the removeButton
	 */
	public JButton getRemoveButton() {
		return removeButton;
	}

	/**
	 * @return the sortButton
	 */
	public JButton getSortButton() {
		return sortButton;
	}

	/**
	 * @return the insertName
	 */
	public JTextField getInsertName() {
		return insertName;
	}

	/**
	 * @return the insertNick
	 */
	public JTextField getInsertNick() {
		return insertNick;
	}

	/**
	 * @return the insertAlt1
	 */
	public JTextField getInsertAlt1() {
		return insertAlt1;
	}

	/**
	 * @return the insertAlt2
	 */
	public JTextField getInsertAlt2() {
		return insertAlt2;
	}

	/**
	 * @return the okButton
	 */
	public JButton getOkButton() {
		return okButton;
	}

	/**
	 * @return the cancelButton
	 */
	public JButton getCancelButton() {
		return cancelButton;
	}
}
